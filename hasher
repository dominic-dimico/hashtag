#!/usr/bin/python


from PIL import Image

import imagehash
import sys
import os
import bisect

global hashes;
filter = False;



################################################################################
# Locate the leftmost value exactly equal to x
################################################################################
def index(x):
    i = bisect.bisect_left(hashes, x)
    if i != len(hashes) and hashes[i] == x:
        return i
    else: return -1;



################################################################################
# Get base directory
################################################################################
basedir = "."
if len(sys.argv) > 1:
   basedir = sys.argv[1];



################################################################################
# No longer any need for filtration
################################################################################
if len(sys.argv) > 2:
   if sys.argv[2] == "filter":
      filter = True;
      with open("/home/dominic/pic/hashes.txt") as hashesfile:
           hashes = hashesfile.read().splitlines();



################################################################################
# Walk along all directories, hash each image and rename it after hash
################################################################################
for (root, subdirs, files) in os.walk(basedir):

    for filename in files:

        src = root + "/" + filename;

        try:
            base, ext = os.path.splitext(src);
            image = Image.open(src)
            dst = imagehash.average_hash(image, hash_size=16);
        except:
            print("%s not an image" % src);
            continue;

        if filter:
           i = index(str(dst));
           if i > 0:
              print("%s exists already" % src);
              os.remove(src);
           continue;

        dst = root + "/" + str(dst) + ext;
        print("%s ->\n%s\n\n" % (src, dst));
        os.rename(src, dst);

